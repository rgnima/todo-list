name: Docker Build and Push

on:
  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the `main` branch.

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
      MYSQL_DB: ${{ secrets.MYSQL_DB }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored as a secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored as a secret

      # Step 3: Set up Node.js (optional, for build prerequisites)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Specify Node.js version

      # Step 4: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-list:latest .

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-list:latest
      # azure login    
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Azure service principal credentials as a secret
    
      # Deploy to AKS
      - uses: Azure/aks-set-context@v4
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.RESOURCE_GROUP }}
      
      
      # Step: Get AKS credentials
      - name: Set up kubectl with AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }}
      
      - name: Create MySQL Secrets
        run: |
          kubectl create secret generic mysql-secret \
          --from-literal=MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD \
          --from-literal=MYSQL_DB=$MYSQL_DB \
          --from-literal=MYSQL_USER=$MYSQL_USER \
          --from-literal=MYSQL_HOST=$MYSQL_HOST \
          --dry-run=client -o yaml | kubectl apply -f -

      - uses: Azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: |
            k8s/00-create-ns.yaml          
            k8s/01-deploy-db.yaml
            k8s/02-service-db.yaml
            k8s/03-deploy-app.yaml
            k8s/04-service-app.yaml
            k8s/05-deploy-prometheus.yaml
            k8s/06-deploy-grafana.yaml
      